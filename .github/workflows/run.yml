name: 刷步数

on:
  schedule:
    - cron: '26,53 * * * *'
  workflow_dispatch:

permissions:
  contents: write           # git commit/push 需要
  actions: write            # 读写仓库变量需要

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - name: Checkout codes
        uses: actions/checkout@v5
        with:
          token: ${{ secrets.PAT }} # git push 需要 PAT

      - name: Update system and install zsh
        run: |
          sudo -E apt-get -qq update
          sudo -E apt-get install zsh -y
          
      - name: 初始化Python
        uses: actions/setup-python@v6
        with:
          python-version: "3.10"
          
      - name: 安装依赖
        run: pip3 install requests pytz pycryptodome

      # --- 新增：读取仓库变量 CURRENT_BATCH ---
      - name: 读取当前批次
        id: read_batch
        env:
          RAW_BATCH: ${{ vars.CURRENT_BATCH }}
        run: |
          # 如果变量不存在，则默认为 0
          CUR="${RAW_BATCH:-0}"
          echo "current_batch=$CUR" >> $GITHUB_OUTPUT
          echo "当前批次: $CUR"

      # --- 修改：将 CURRENT_BATCH 作为环境变量传递给 Python 脚本 ---
      - name: 开始
        env:
            CONFIG: ${{ secrets.CONFIG }}
            AES_KEY: ${{ secrets.AES_KEY }}
            CURRENT_BATCH: ${{ steps.read_batch.outputs.current_batch }} # <-- 传递批次号
        run: |
          python3 main.py

      # --- 新增：计算并回写下一批的批次号 ---
      - name: 计算下一批
        id: calc_next
        env:
          CUR: ${{ steps.read_batch.outputs.current_batch }}
        run: |
          NEXT=$((CUR + 1))
          echo "next_batch=$NEXT" >> $GITHUB_OUTPUT
          echo "下一批次: $NEXT"

      - name: 回写仓库变量（CURRENT_BATCH）
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.PAT }}
          script: |
            const owner = context.repo.owner;
            const repo = context.repo.repo;
            const name = 'CURRENT_BATCH';
            const value = '${{ steps.calc_next.outputs.next_batch }}';

            try {
              await github.rest.actions.updateRepoVariable({ owner, repo, name, value });
              console.log(`已更新变量 ${name}=${value}`);
            } catch (error) {
              if (error.status === 404) {
                await github.rest.actions.createRepoVariable({ owner, repo, name, value });
                console.log(`已创建变量 ${name}=${value}`);
              } else {
                throw error;
              }
            }

      # --- 保持原有逻辑：git commit 持久化令牌 ---
      - name: persist tokens
        run: |
          git config user.name github-actions
          git config user.email github-actions@users.noreply.github.com
          git add .
          git commit -m "persist tokens trigger by ${{ github.event_name }} at batch ${{ steps.read_batch.outputs.current_batch }}"
          git push origin master
